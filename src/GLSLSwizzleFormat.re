/* Auto-generated by GLSLGenerator.py */
include GLSLSwizzleType;

module PhantomAlgebra = Core;

let protoScalar = PhantomAlgebra.scalar(1.0);

let protoFloat = protoScalar;

let protoVec2 = PhantomAlgebra.vec2(1.0, 1.0);

let protoVec3 = PhantomAlgebra.vec3(1.0, 1.0, 1.0);

let protoVec4 = PhantomAlgebra.vec4(1.0, 1.0, 1.0, 1.0);

let protoMat2 = PhantomAlgebra.mat2(protoVec2, protoVec2);

let protoMat3 = PhantomAlgebra.mat3(protoVec3, protoVec3, protoVec3);

let protoMat4 = PhantomAlgebra.mat4(protoVec4, protoVec4, protoVec4, protoVec4);

let fmtSwizzle = (swizzle: swizzleT) =>
  switch swizzle {
    | A => "a"
  | AA => "aa"
  | AAA => "aaa"
  | AAAA => "aaaa"
  | AAAB => "aaab"
  | AAAG => "aaag"
  | AAAR => "aaar"
  | AAB => "aab"
  | AABA => "aaba"
  | AABB => "aabb"
  | AABG => "aabg"
  | AABR => "aabr"
  | AAG => "aag"
  | AAGA => "aaga"
  | AAGB => "aagb"
  | AAGG => "aagg"
  | AAGR => "aagr"
  | AAR => "aar"
  | AARA => "aara"
  | AARB => "aarb"
  | AARG => "aarg"
  | AARR => "aarr"
  | AB => "ab"
  | ABA => "aba"
  | ABAA => "abaa"
  | ABAB => "abab"
  | ABAG => "abag"
  | ABAR => "abar"
  | ABB => "abb"
  | ABBA => "abba"
  | ABBB => "abbb"
  | ABBG => "abbg"
  | ABBR => "abbr"
  | ABG => "abg"
  | ABGA => "abga"
  | ABGB => "abgb"
  | ABGG => "abgg"
  | ABGR => "abgr"
  | ABR => "abr"
  | ABRA => "abra"
  | ABRB => "abrb"
  | ABRG => "abrg"
  | ABRR => "abrr"
  | AG => "ag"
  | AGA => "aga"
  | AGAA => "agaa"
  | AGAB => "agab"
  | AGAG => "agag"
  | AGAR => "agar"
  | AGB => "agb"
  | AGBA => "agba"
  | AGBB => "agbb"
  | AGBG => "agbg"
  | AGBR => "agbr"
  | AGG => "agg"
  | AGGA => "agga"
  | AGGB => "aggb"
  | AGGG => "aggg"
  | AGGR => "aggr"
  | AGR => "agr"
  | AGRA => "agra"
  | AGRB => "agrb"
  | AGRG => "agrg"
  | AGRR => "agrr"
  | AR => "ar"
  | ARA => "ara"
  | ARAA => "araa"
  | ARAB => "arab"
  | ARAG => "arag"
  | ARAR => "arar"
  | ARB => "arb"
  | ARBA => "arba"
  | ARBB => "arbb"
  | ARBG => "arbg"
  | ARBR => "arbr"
  | ARG => "arg"
  | ARGA => "arga"
  | ARGB => "argb"
  | ARGG => "argg"
  | ARGR => "argr"
  | ARR => "arr"
  | ARRA => "arra"
  | ARRB => "arrb"
  | ARRG => "arrg"
  | ARRR => "arrr"
  | B => "b"
  | BA => "ba"
  | BAA => "baa"
  | BAAA => "baaa"
  | BAAB => "baab"
  | BAAG => "baag"
  | BAAR => "baar"
  | BAB => "bab"
  | BABA => "baba"
  | BABB => "babb"
  | BABG => "babg"
  | BABR => "babr"
  | BAG => "bag"
  | BAGA => "baga"
  | BAGB => "bagb"
  | BAGG => "bagg"
  | BAGR => "bagr"
  | BAR => "bar"
  | BARA => "bara"
  | BARB => "barb"
  | BARG => "barg"
  | BARR => "barr"
  | BB => "bb"
  | BBA => "bba"
  | BBAA => "bbaa"
  | BBAB => "bbab"
  | BBAG => "bbag"
  | BBAR => "bbar"
  | BBB => "bbb"
  | BBBA => "bbba"
  | BBBB => "bbbb"
  | BBBG => "bbbg"
  | BBBR => "bbbr"
  | BBG => "bbg"
  | BBGA => "bbga"
  | BBGB => "bbgb"
  | BBGG => "bbgg"
  | BBGR => "bbgr"
  | BBR => "bbr"
  | BBRA => "bbra"
  | BBRB => "bbrb"
  | BBRG => "bbrg"
  | BBRR => "bbrr"
  | BG => "bg"
  | BGA => "bga"
  | BGAA => "bgaa"
  | BGAB => "bgab"
  | BGAG => "bgag"
  | BGAR => "bgar"
  | BGB => "bgb"
  | BGBA => "bgba"
  | BGBB => "bgbb"
  | BGBG => "bgbg"
  | BGBR => "bgbr"
  | BGG => "bgg"
  | BGGA => "bgga"
  | BGGB => "bggb"
  | BGGG => "bggg"
  | BGGR => "bggr"
  | BGR => "bgr"
  | BGRA => "bgra"
  | BGRB => "bgrb"
  | BGRG => "bgrg"
  | BGRR => "bgrr"
  | BR => "br"
  | BRA => "bra"
  | BRAA => "braa"
  | BRAB => "brab"
  | BRAG => "brag"
  | BRAR => "brar"
  | BRB => "brb"
  | BRBA => "brba"
  | BRBB => "brbb"
  | BRBG => "brbg"
  | BRBR => "brbr"
  | BRG => "brg"
  | BRGA => "brga"
  | BRGB => "brgb"
  | BRGG => "brgg"
  | BRGR => "brgr"
  | BRR => "brr"
  | BRRA => "brra"
  | BRRB => "brrb"
  | BRRG => "brrg"
  | BRRR => "brrr"
  | G => "g"
  | GA => "ga"
  | GAA => "gaa"
  | GAAA => "gaaa"
  | GAAB => "gaab"
  | GAAG => "gaag"
  | GAAR => "gaar"
  | GAB => "gab"
  | GABA => "gaba"
  | GABB => "gabb"
  | GABG => "gabg"
  | GABR => "gabr"
  | GAG => "gag"
  | GAGA => "gaga"
  | GAGB => "gagb"
  | GAGG => "gagg"
  | GAGR => "gagr"
  | GAR => "gar"
  | GARA => "gara"
  | GARB => "garb"
  | GARG => "garg"
  | GARR => "garr"
  | GB => "gb"
  | GBA => "gba"
  | GBAA => "gbaa"
  | GBAB => "gbab"
  | GBAG => "gbag"
  | GBAR => "gbar"
  | GBB => "gbb"
  | GBBA => "gbba"
  | GBBB => "gbbb"
  | GBBG => "gbbg"
  | GBBR => "gbbr"
  | GBG => "gbg"
  | GBGA => "gbga"
  | GBGB => "gbgb"
  | GBGG => "gbgg"
  | GBGR => "gbgr"
  | GBR => "gbr"
  | GBRA => "gbra"
  | GBRB => "gbrb"
  | GBRG => "gbrg"
  | GBRR => "gbrr"
  | GG => "gg"
  | GGA => "gga"
  | GGAA => "ggaa"
  | GGAB => "ggab"
  | GGAG => "ggag"
  | GGAR => "ggar"
  | GGB => "ggb"
  | GGBA => "ggba"
  | GGBB => "ggbb"
  | GGBG => "ggbg"
  | GGBR => "ggbr"
  | GGG => "ggg"
  | GGGA => "ggga"
  | GGGB => "gggb"
  | GGGG => "gggg"
  | GGGR => "gggr"
  | GGR => "ggr"
  | GGRA => "ggra"
  | GGRB => "ggrb"
  | GGRG => "ggrg"
  | GGRR => "ggrr"
  | GR => "gr"
  | GRA => "gra"
  | GRAA => "graa"
  | GRAB => "grab"
  | GRAG => "grag"
  | GRAR => "grar"
  | GRB => "grb"
  | GRBA => "grba"
  | GRBB => "grbb"
  | GRBG => "grbg"
  | GRBR => "grbr"
  | GRG => "grg"
  | GRGA => "grga"
  | GRGB => "grgb"
  | GRGG => "grgg"
  | GRGR => "grgr"
  | GRR => "grr"
  | GRRA => "grra"
  | GRRB => "grrb"
  | GRRG => "grrg"
  | GRRR => "grrr"
  | R => "r"
  | RA => "ra"
  | RAA => "raa"
  | RAAA => "raaa"
  | RAAB => "raab"
  | RAAG => "raag"
  | RAAR => "raar"
  | RAB => "rab"
  | RABA => "raba"
  | RABB => "rabb"
  | RABG => "rabg"
  | RABR => "rabr"
  | RAG => "rag"
  | RAGA => "raga"
  | RAGB => "ragb"
  | RAGG => "ragg"
  | RAGR => "ragr"
  | RAR => "rar"
  | RARA => "rara"
  | RARB => "rarb"
  | RARG => "rarg"
  | RARR => "rarr"
  | RB => "rb"
  | RBA => "rba"
  | RBAA => "rbaa"
  | RBAB => "rbab"
  | RBAG => "rbag"
  | RBAR => "rbar"
  | RBB => "rbb"
  | RBBA => "rbba"
  | RBBB => "rbbb"
  | RBBG => "rbbg"
  | RBBR => "rbbr"
  | RBG => "rbg"
  | RBGA => "rbga"
  | RBGB => "rbgb"
  | RBGG => "rbgg"
  | RBGR => "rbgr"
  | RBR => "rbr"
  | RBRA => "rbra"
  | RBRB => "rbrb"
  | RBRG => "rbrg"
  | RBRR => "rbrr"
  | RG => "rg"
  | RGA => "rga"
  | RGAA => "rgaa"
  | RGAB => "rgab"
  | RGAG => "rgag"
  | RGAR => "rgar"
  | RGB => "rgb"
  | RGBA => "rgba"
  | RGBB => "rgbb"
  | RGBG => "rgbg"
  | RGBR => "rgbr"
  | RGG => "rgg"
  | RGGA => "rgga"
  | RGGB => "rggb"
  | RGGG => "rggg"
  | RGGR => "rggr"
  | RGR => "rgr"
  | RGRA => "rgra"
  | RGRB => "rgrb"
  | RGRG => "rgrg"
  | RGRR => "rgrr"
  | RR => "rr"
  | RRA => "rra"
  | RRAA => "rraa"
  | RRAB => "rrab"
  | RRAG => "rrag"
  | RRAR => "rrar"
  | RRB => "rrb"
  | RRBA => "rrba"
  | RRBB => "rrbb"
  | RRBG => "rrbg"
  | RRBR => "rrbr"
  | RRG => "rrg"
  | RRGA => "rrga"
  | RRGB => "rrgb"
  | RRGG => "rrgg"
  | RRGR => "rrgr"
  | RRR => "rrr"
  | RRRA => "rrra"
  | RRRB => "rrrb"
  | RRRG => "rrrg"
  | RRRR => "rrrr"
  | W => "w"
  | WW => "ww"
  | WWW => "www"
  | WWWW => "wwww"
  | WWWX => "wwwx"
  | WWWY => "wwwy"
  | WWWZ => "wwwz"
  | WWX => "wwx"
  | WWXW => "wwxw"
  | WWXX => "wwxx"
  | WWXY => "wwxy"
  | WWXZ => "wwxz"
  | WWY => "wwy"
  | WWYW => "wwyw"
  | WWYX => "wwyx"
  | WWYY => "wwyy"
  | WWYZ => "wwyz"
  | WWZ => "wwz"
  | WWZW => "wwzw"
  | WWZX => "wwzx"
  | WWZY => "wwzy"
  | WWZZ => "wwzz"
  | WX => "wx"
  | WXW => "wxw"
  | WXWW => "wxww"
  | WXWX => "wxwx"
  | WXWY => "wxwy"
  | WXWZ => "wxwz"
  | WXX => "wxx"
  | WXXW => "wxxw"
  | WXXX => "wxxx"
  | WXXY => "wxxy"
  | WXXZ => "wxxz"
  | WXY => "wxy"
  | WXYW => "wxyw"
  | WXYX => "wxyx"
  | WXYY => "wxyy"
  | WXYZ => "wxyz"
  | WXZ => "wxz"
  | WXZW => "wxzw"
  | WXZX => "wxzx"
  | WXZY => "wxzy"
  | WXZZ => "wxzz"
  | WY => "wy"
  | WYW => "wyw"
  | WYWW => "wyww"
  | WYWX => "wywx"
  | WYWY => "wywy"
  | WYWZ => "wywz"
  | WYX => "wyx"
  | WYXW => "wyxw"
  | WYXX => "wyxx"
  | WYXY => "wyxy"
  | WYXZ => "wyxz"
  | WYY => "wyy"
  | WYYW => "wyyw"
  | WYYX => "wyyx"
  | WYYY => "wyyy"
  | WYYZ => "wyyz"
  | WYZ => "wyz"
  | WYZW => "wyzw"
  | WYZX => "wyzx"
  | WYZY => "wyzy"
  | WYZZ => "wyzz"
  | WZ => "wz"
  | WZW => "wzw"
  | WZWW => "wzww"
  | WZWX => "wzwx"
  | WZWY => "wzwy"
  | WZWZ => "wzwz"
  | WZX => "wzx"
  | WZXW => "wzxw"
  | WZXX => "wzxx"
  | WZXY => "wzxy"
  | WZXZ => "wzxz"
  | WZY => "wzy"
  | WZYW => "wzyw"
  | WZYX => "wzyx"
  | WZYY => "wzyy"
  | WZYZ => "wzyz"
  | WZZ => "wzz"
  | WZZW => "wzzw"
  | WZZX => "wzzx"
  | WZZY => "wzzy"
  | WZZZ => "wzzz"
  | X => "x"
  | XW => "xw"
  | XWW => "xww"
  | XWWW => "xwww"
  | XWWX => "xwwx"
  | XWWY => "xwwy"
  | XWWZ => "xwwz"
  | XWX => "xwx"
  | XWXW => "xwxw"
  | XWXX => "xwxx"
  | XWXY => "xwxy"
  | XWXZ => "xwxz"
  | XWY => "xwy"
  | XWYW => "xwyw"
  | XWYX => "xwyx"
  | XWYY => "xwyy"
  | XWYZ => "xwyz"
  | XWZ => "xwz"
  | XWZW => "xwzw"
  | XWZX => "xwzx"
  | XWZY => "xwzy"
  | XWZZ => "xwzz"
  | XX => "xx"
  | XXW => "xxw"
  | XXWW => "xxww"
  | XXWX => "xxwx"
  | XXWY => "xxwy"
  | XXWZ => "xxwz"
  | XXX => "xxx"
  | XXXW => "xxxw"
  | XXXX => "xxxx"
  | XXXY => "xxxy"
  | XXXZ => "xxxz"
  | XXY => "xxy"
  | XXYW => "xxyw"
  | XXYX => "xxyx"
  | XXYY => "xxyy"
  | XXYZ => "xxyz"
  | XXZ => "xxz"
  | XXZW => "xxzw"
  | XXZX => "xxzx"
  | XXZY => "xxzy"
  | XXZZ => "xxzz"
  | XY => "xy"
  | XYW => "xyw"
  | XYWW => "xyww"
  | XYWX => "xywx"
  | XYWY => "xywy"
  | XYWZ => "xywz"
  | XYX => "xyx"
  | XYXW => "xyxw"
  | XYXX => "xyxx"
  | XYXY => "xyxy"
  | XYXZ => "xyxz"
  | XYY => "xyy"
  | XYYW => "xyyw"
  | XYYX => "xyyx"
  | XYYY => "xyyy"
  | XYYZ => "xyyz"
  | XYZ => "xyz"
  | XYZW => "xyzw"
  | XYZX => "xyzx"
  | XYZY => "xyzy"
  | XYZZ => "xyzz"
  | XZ => "xz"
  | XZW => "xzw"
  | XZWW => "xzww"
  | XZWX => "xzwx"
  | XZWY => "xzwy"
  | XZWZ => "xzwz"
  | XZX => "xzx"
  | XZXW => "xzxw"
  | XZXX => "xzxx"
  | XZXY => "xzxy"
  | XZXZ => "xzxz"
  | XZY => "xzy"
  | XZYW => "xzyw"
  | XZYX => "xzyx"
  | XZYY => "xzyy"
  | XZYZ => "xzyz"
  | XZZ => "xzz"
  | XZZW => "xzzw"
  | XZZX => "xzzx"
  | XZZY => "xzzy"
  | XZZZ => "xzzz"
  | Y => "y"
  | YW => "yw"
  | YWW => "yww"
  | YWWW => "ywww"
  | YWWX => "ywwx"
  | YWWY => "ywwy"
  | YWWZ => "ywwz"
  | YWX => "ywx"
  | YWXW => "ywxw"
  | YWXX => "ywxx"
  | YWXY => "ywxy"
  | YWXZ => "ywxz"
  | YWY => "ywy"
  | YWYW => "ywyw"
  | YWYX => "ywyx"
  | YWYY => "ywyy"
  | YWYZ => "ywyz"
  | YWZ => "ywz"
  | YWZW => "ywzw"
  | YWZX => "ywzx"
  | YWZY => "ywzy"
  | YWZZ => "ywzz"
  | YX => "yx"
  | YXW => "yxw"
  | YXWW => "yxww"
  | YXWX => "yxwx"
  | YXWY => "yxwy"
  | YXWZ => "yxwz"
  | YXX => "yxx"
  | YXXW => "yxxw"
  | YXXX => "yxxx"
  | YXXY => "yxxy"
  | YXXZ => "yxxz"
  | YXY => "yxy"
  | YXYW => "yxyw"
  | YXYX => "yxyx"
  | YXYY => "yxyy"
  | YXYZ => "yxyz"
  | YXZ => "yxz"
  | YXZW => "yxzw"
  | YXZX => "yxzx"
  | YXZY => "yxzy"
  | YXZZ => "yxzz"
  | YY => "yy"
  | YYW => "yyw"
  | YYWW => "yyww"
  | YYWX => "yywx"
  | YYWY => "yywy"
  | YYWZ => "yywz"
  | YYX => "yyx"
  | YYXW => "yyxw"
  | YYXX => "yyxx"
  | YYXY => "yyxy"
  | YYXZ => "yyxz"
  | YYY => "yyy"
  | YYYW => "yyyw"
  | YYYX => "yyyx"
  | YYYY => "yyyy"
  | YYYZ => "yyyz"
  | YYZ => "yyz"
  | YYZW => "yyzw"
  | YYZX => "yyzx"
  | YYZY => "yyzy"
  | YYZZ => "yyzz"
  | YZ => "yz"
  | YZW => "yzw"
  | YZWW => "yzww"
  | YZWX => "yzwx"
  | YZWY => "yzwy"
  | YZWZ => "yzwz"
  | YZX => "yzx"
  | YZXW => "yzxw"
  | YZXX => "yzxx"
  | YZXY => "yzxy"
  | YZXZ => "yzxz"
  | YZY => "yzy"
  | YZYW => "yzyw"
  | YZYX => "yzyx"
  | YZYY => "yzyy"
  | YZYZ => "yzyz"
  | YZZ => "yzz"
  | YZZW => "yzzw"
  | YZZX => "yzzx"
  | YZZY => "yzzy"
  | YZZZ => "yzzz"
  | Z => "z"
  | ZW => "zw"
  | ZWW => "zww"
  | ZWWW => "zwww"
  | ZWWX => "zwwx"
  | ZWWY => "zwwy"
  | ZWWZ => "zwwz"
  | ZWX => "zwx"
  | ZWXW => "zwxw"
  | ZWXX => "zwxx"
  | ZWXY => "zwxy"
  | ZWXZ => "zwxz"
  | ZWY => "zwy"
  | ZWYW => "zwyw"
  | ZWYX => "zwyx"
  | ZWYY => "zwyy"
  | ZWYZ => "zwyz"
  | ZWZ => "zwz"
  | ZWZW => "zwzw"
  | ZWZX => "zwzx"
  | ZWZY => "zwzy"
  | ZWZZ => "zwzz"
  | ZX => "zx"
  | ZXW => "zxw"
  | ZXWW => "zxww"
  | ZXWX => "zxwx"
  | ZXWY => "zxwy"
  | ZXWZ => "zxwz"
  | ZXX => "zxx"
  | ZXXW => "zxxw"
  | ZXXX => "zxxx"
  | ZXXY => "zxxy"
  | ZXXZ => "zxxz"
  | ZXY => "zxy"
  | ZXYW => "zxyw"
  | ZXYX => "zxyx"
  | ZXYY => "zxyy"
  | ZXYZ => "zxyz"
  | ZXZ => "zxz"
  | ZXZW => "zxzw"
  | ZXZX => "zxzx"
  | ZXZY => "zxzy"
  | ZXZZ => "zxzz"
  | ZY => "zy"
  | ZYW => "zyw"
  | ZYWW => "zyww"
  | ZYWX => "zywx"
  | ZYWY => "zywy"
  | ZYWZ => "zywz"
  | ZYX => "zyx"
  | ZYXW => "zyxw"
  | ZYXX => "zyxx"
  | ZYXY => "zyxy"
  | ZYXZ => "zyxz"
  | ZYY => "zyy"
  | ZYYW => "zyyw"
  | ZYYX => "zyyx"
  | ZYYY => "zyyy"
  | ZYYZ => "zyyz"
  | ZYZ => "zyz"
  | ZYZW => "zyzw"
  | ZYZX => "zyzx"
  | ZYZY => "zyzy"
  | ZYZZ => "zyzz"
  | ZZ => "zz"
  | ZZW => "zzw"
  | ZZWW => "zzww"
  | ZZWX => "zzwx"
  | ZZWY => "zzwy"
  | ZZWZ => "zzwz"
  | ZZX => "zzx"
  | ZZXW => "zzxw"
  | ZZXX => "zzxx"
  | ZZXY => "zzxy"
  | ZZXZ => "zzxz"
  | ZZY => "zzy"
  | ZZYW => "zzyw"
  | ZZYX => "zzyx"
  | ZZYY => "zzyy"
  | ZZYZ => "zzyz"
  | ZZZ => "zzz"
  | ZZZW => "zzzw"
  | ZZZX => "zzzx"
  | ZZZY => "zzzy"
  | ZZZZ => "zzzz"
  };

  /*
let accept1 : [< `Float | `Vec2 | `Vec3 | `Vec4] => unit = (_) => ();
let accept2 : [< `Vec2 | `Vec3 | `Vec4] => unit = (_) => ();
let accept3 : [< `Vec3 | `Vec4] => unit = (_) => ();
let accept4 : [< `Vec4] => unit = (_) => ();
*/

let accept1 = a => PhantomAlgebra.get(a, PhantomAlgebra.x);
let accept2 = a => PhantomAlgebra.get(a, PhantomAlgebra.y);
let accept3 = a => PhantomAlgebra.get(a, PhantomAlgebra.z);
let accept4 = a => PhantomAlgebra.get(a, PhantomAlgebra.w);
  let a' = (protoFloat, A, accept4);
  let aa' = (protoVec2, AA, accept4);
  let aaa' = (protoVec3, AAA, accept4);
  let aaaa' = (protoVec4, AAAA, accept4);
  let aaab' = (protoVec4, AAAB, accept4);
  let aaag' = (protoVec4, AAAG, accept4);
  let aaar' = (protoVec4, AAAR, accept4);
  let aab' = (protoVec3, AAB, accept4);
  let aaba' = (protoVec4, AABA, accept4);
  let aabb' = (protoVec4, AABB, accept4);
  let aabg' = (protoVec4, AABG, accept4);
  let aabr' = (protoVec4, AABR, accept4);
  let aag' = (protoVec3, AAG, accept4);
  let aaga' = (protoVec4, AAGA, accept4);
  let aagb' = (protoVec4, AAGB, accept4);
  let aagg' = (protoVec4, AAGG, accept4);
  let aagr' = (protoVec4, AAGR, accept4);
  let aar' = (protoVec3, AAR, accept4);
  let aara' = (protoVec4, AARA, accept4);
  let aarb' = (protoVec4, AARB, accept4);
  let aarg' = (protoVec4, AARG, accept4);
  let aarr' = (protoVec4, AARR, accept4);
  let ab' = (protoVec2, AB, accept4);
  let aba' = (protoVec3, ABA, accept4);
  let abaa' = (protoVec4, ABAA, accept4);
  let abab' = (protoVec4, ABAB, accept4);
  let abag' = (protoVec4, ABAG, accept4);
  let abar' = (protoVec4, ABAR, accept4);
  let abb' = (protoVec3, ABB, accept4);
  let abba' = (protoVec4, ABBA, accept4);
  let abbb' = (protoVec4, ABBB, accept4);
  let abbg' = (protoVec4, ABBG, accept4);
  let abbr' = (protoVec4, ABBR, accept4);
  let abg' = (protoVec3, ABG, accept4);
  let abga' = (protoVec4, ABGA, accept4);
  let abgb' = (protoVec4, ABGB, accept4);
  let abgg' = (protoVec4, ABGG, accept4);
  let abgr' = (protoVec4, ABGR, accept4);
  let abr' = (protoVec3, ABR, accept4);
  let abra' = (protoVec4, ABRA, accept4);
  let abrb' = (protoVec4, ABRB, accept4);
  let abrg' = (protoVec4, ABRG, accept4);
  let abrr' = (protoVec4, ABRR, accept4);
  let ag' = (protoVec2, AG, accept4);
  let aga' = (protoVec3, AGA, accept4);
  let agaa' = (protoVec4, AGAA, accept4);
  let agab' = (protoVec4, AGAB, accept4);
  let agag' = (protoVec4, AGAG, accept4);
  let agar' = (protoVec4, AGAR, accept4);
  let agb' = (protoVec3, AGB, accept4);
  let agba' = (protoVec4, AGBA, accept4);
  let agbb' = (protoVec4, AGBB, accept4);
  let agbg' = (protoVec4, AGBG, accept4);
  let agbr' = (protoVec4, AGBR, accept4);
  let agg' = (protoVec3, AGG, accept4);
  let agga' = (protoVec4, AGGA, accept4);
  let aggb' = (protoVec4, AGGB, accept4);
  let aggg' = (protoVec4, AGGG, accept4);
  let aggr' = (protoVec4, AGGR, accept4);
  let agr' = (protoVec3, AGR, accept4);
  let agra' = (protoVec4, AGRA, accept4);
  let agrb' = (protoVec4, AGRB, accept4);
  let agrg' = (protoVec4, AGRG, accept4);
  let agrr' = (protoVec4, AGRR, accept4);
  let ar' = (protoVec2, AR, accept4);
  let ara' = (protoVec3, ARA, accept4);
  let araa' = (protoVec4, ARAA, accept4);
  let arab' = (protoVec4, ARAB, accept4);
  let arag' = (protoVec4, ARAG, accept4);
  let arar' = (protoVec4, ARAR, accept4);
  let arb' = (protoVec3, ARB, accept4);
  let arba' = (protoVec4, ARBA, accept4);
  let arbb' = (protoVec4, ARBB, accept4);
  let arbg' = (protoVec4, ARBG, accept4);
  let arbr' = (protoVec4, ARBR, accept4);
  let arg' = (protoVec3, ARG, accept4);
  let arga' = (protoVec4, ARGA, accept4);
  let argb' = (protoVec4, ARGB, accept4);
  let argg' = (protoVec4, ARGG, accept4);
  let argr' = (protoVec4, ARGR, accept4);
  let arr' = (protoVec3, ARR, accept4);
  let arra' = (protoVec4, ARRA, accept4);
  let arrb' = (protoVec4, ARRB, accept4);
  let arrg' = (protoVec4, ARRG, accept4);
  let arrr' = (protoVec4, ARRR, accept4);
  let b' = (protoFloat, B, accept3);
  let ba' = (protoVec2, BA, accept4);
  let baa' = (protoVec3, BAA, accept4);
  let baaa' = (protoVec4, BAAA, accept4);
  let baab' = (protoVec4, BAAB, accept4);
  let baag' = (protoVec4, BAAG, accept4);
  let baar' = (protoVec4, BAAR, accept4);
  let bab' = (protoVec3, BAB, accept4);
  let baba' = (protoVec4, BABA, accept4);
  let babb' = (protoVec4, BABB, accept4);
  let babg' = (protoVec4, BABG, accept4);
  let babr' = (protoVec4, BABR, accept4);
  let bag' = (protoVec3, BAG, accept4);
  let baga' = (protoVec4, BAGA, accept4);
  let bagb' = (protoVec4, BAGB, accept4);
  let bagg' = (protoVec4, BAGG, accept4);
  let bagr' = (protoVec4, BAGR, accept4);
  let bar' = (protoVec3, BAR, accept4);
  let bara' = (protoVec4, BARA, accept4);
  let barb' = (protoVec4, BARB, accept4);
  let barg' = (protoVec4, BARG, accept4);
  let barr' = (protoVec4, BARR, accept4);
  let bb' = (protoVec2, BB, accept3);
  let bba' = (protoVec3, BBA, accept4);
  let bbaa' = (protoVec4, BBAA, accept4);
  let bbab' = (protoVec4, BBAB, accept4);
  let bbag' = (protoVec4, BBAG, accept4);
  let bbar' = (protoVec4, BBAR, accept4);
  let bbb' = (protoVec3, BBB, accept3);
  let bbba' = (protoVec4, BBBA, accept4);
  let bbbb' = (protoVec4, BBBB, accept3);
  let bbbg' = (protoVec4, BBBG, accept3);
  let bbbr' = (protoVec4, BBBR, accept3);
  let bbg' = (protoVec3, BBG, accept3);
  let bbga' = (protoVec4, BBGA, accept4);
  let bbgb' = (protoVec4, BBGB, accept3);
  let bbgg' = (protoVec4, BBGG, accept3);
  let bbgr' = (protoVec4, BBGR, accept3);
  let bbr' = (protoVec3, BBR, accept3);
  let bbra' = (protoVec4, BBRA, accept4);
  let bbrb' = (protoVec4, BBRB, accept3);
  let bbrg' = (protoVec4, BBRG, accept3);
  let bbrr' = (protoVec4, BBRR, accept3);
  let bg' = (protoVec2, BG, accept3);
  let bga' = (protoVec3, BGA, accept4);
  let bgaa' = (protoVec4, BGAA, accept4);
  let bgab' = (protoVec4, BGAB, accept4);
  let bgag' = (protoVec4, BGAG, accept4);
  let bgar' = (protoVec4, BGAR, accept4);
  let bgb' = (protoVec3, BGB, accept3);
  let bgba' = (protoVec4, BGBA, accept4);
  let bgbb' = (protoVec4, BGBB, accept3);
  let bgbg' = (protoVec4, BGBG, accept3);
  let bgbr' = (protoVec4, BGBR, accept3);
  let bgg' = (protoVec3, BGG, accept3);
  let bgga' = (protoVec4, BGGA, accept4);
  let bggb' = (protoVec4, BGGB, accept3);
  let bggg' = (protoVec4, BGGG, accept3);
  let bggr' = (protoVec4, BGGR, accept3);
  let bgr' = (protoVec3, BGR, accept3);
  let bgra' = (protoVec4, BGRA, accept4);
  let bgrb' = (protoVec4, BGRB, accept3);
  let bgrg' = (protoVec4, BGRG, accept3);
  let bgrr' = (protoVec4, BGRR, accept3);
  let br' = (protoVec2, BR, accept3);
  let bra' = (protoVec3, BRA, accept4);
  let braa' = (protoVec4, BRAA, accept4);
  let brab' = (protoVec4, BRAB, accept4);
  let brag' = (protoVec4, BRAG, accept4);
  let brar' = (protoVec4, BRAR, accept4);
  let brb' = (protoVec3, BRB, accept3);
  let brba' = (protoVec4, BRBA, accept4);
  let brbb' = (protoVec4, BRBB, accept3);
  let brbg' = (protoVec4, BRBG, accept3);
  let brbr' = (protoVec4, BRBR, accept3);
  let brg' = (protoVec3, BRG, accept3);
  let brga' = (protoVec4, BRGA, accept4);
  let brgb' = (protoVec4, BRGB, accept3);
  let brgg' = (protoVec4, BRGG, accept3);
  let brgr' = (protoVec4, BRGR, accept3);
  let brr' = (protoVec3, BRR, accept3);
  let brra' = (protoVec4, BRRA, accept4);
  let brrb' = (protoVec4, BRRB, accept3);
  let brrg' = (protoVec4, BRRG, accept3);
  let brrr' = (protoVec4, BRRR, accept3);
  let g' = (protoFloat, G, accept1);
  let ga' = (protoVec2, GA, accept4);
  let gaa' = (protoVec3, GAA, accept4);
  let gaaa' = (protoVec4, GAAA, accept4);
  let gaab' = (protoVec4, GAAB, accept4);
  let gaag' = (protoVec4, GAAG, accept4);
  let gaar' = (protoVec4, GAAR, accept4);
  let gab' = (protoVec3, GAB, accept4);
  let gaba' = (protoVec4, GABA, accept4);
  let gabb' = (protoVec4, GABB, accept4);
  let gabg' = (protoVec4, GABG, accept4);
  let gabr' = (protoVec4, GABR, accept4);
  let gag' = (protoVec3, GAG, accept4);
  let gaga' = (protoVec4, GAGA, accept4);
  let gagb' = (protoVec4, GAGB, accept4);
  let gagg' = (protoVec4, GAGG, accept4);
  let gagr' = (protoVec4, GAGR, accept4);
  let gar' = (protoVec3, GAR, accept4);
  let gara' = (protoVec4, GARA, accept4);
  let garb' = (protoVec4, GARB, accept4);
  let garg' = (protoVec4, GARG, accept4);
  let garr' = (protoVec4, GARR, accept4);
  let gb' = (protoVec2, GB, accept3);
  let gba' = (protoVec3, GBA, accept4);
  let gbaa' = (protoVec4, GBAA, accept4);
  let gbab' = (protoVec4, GBAB, accept4);
  let gbag' = (protoVec4, GBAG, accept4);
  let gbar' = (protoVec4, GBAR, accept4);
  let gbb' = (protoVec3, GBB, accept3);
  let gbba' = (protoVec4, GBBA, accept4);
  let gbbb' = (protoVec4, GBBB, accept3);
  let gbbg' = (protoVec4, GBBG, accept3);
  let gbbr' = (protoVec4, GBBR, accept3);
  let gbg' = (protoVec3, GBG, accept3);
  let gbga' = (protoVec4, GBGA, accept4);
  let gbgb' = (protoVec4, GBGB, accept3);
  let gbgg' = (protoVec4, GBGG, accept3);
  let gbgr' = (protoVec4, GBGR, accept3);
  let gbr' = (protoVec3, GBR, accept3);
  let gbra' = (protoVec4, GBRA, accept4);
  let gbrb' = (protoVec4, GBRB, accept3);
  let gbrg' = (protoVec4, GBRG, accept3);
  let gbrr' = (protoVec4, GBRR, accept3);
  let gg' = (protoVec2, GG, accept1);
  let gga' = (protoVec3, GGA, accept4);
  let ggaa' = (protoVec4, GGAA, accept4);
  let ggab' = (protoVec4, GGAB, accept4);
  let ggag' = (protoVec4, GGAG, accept4);
  let ggar' = (protoVec4, GGAR, accept4);
  let ggb' = (protoVec3, GGB, accept3);
  let ggba' = (protoVec4, GGBA, accept4);
  let ggbb' = (protoVec4, GGBB, accept3);
  let ggbg' = (protoVec4, GGBG, accept3);
  let ggbr' = (protoVec4, GGBR, accept3);
  let ggg' = (protoVec3, GGG, accept1);
  let ggga' = (protoVec4, GGGA, accept4);
  let gggb' = (protoVec4, GGGB, accept3);
  let gggg' = (protoVec4, GGGG, accept1);
  let gggr' = (protoVec4, GGGR, accept1);
  let ggr' = (protoVec3, GGR, accept1);
  let ggra' = (protoVec4, GGRA, accept4);
  let ggrb' = (protoVec4, GGRB, accept3);
  let ggrg' = (protoVec4, GGRG, accept1);
  let ggrr' = (protoVec4, GGRR, accept1);
  let gr' = (protoVec2, GR, accept1);
  let gra' = (protoVec3, GRA, accept4);
  let graa' = (protoVec4, GRAA, accept4);
  let grab' = (protoVec4, GRAB, accept4);
  let grag' = (protoVec4, GRAG, accept4);
  let grar' = (protoVec4, GRAR, accept4);
  let grb' = (protoVec3, GRB, accept3);
  let grba' = (protoVec4, GRBA, accept4);
  let grbb' = (protoVec4, GRBB, accept3);
  let grbg' = (protoVec4, GRBG, accept3);
  let grbr' = (protoVec4, GRBR, accept3);
  let grg' = (protoVec3, GRG, accept1);
  let grga' = (protoVec4, GRGA, accept4);
  let grgb' = (protoVec4, GRGB, accept3);
  let grgg' = (protoVec4, GRGG, accept1);
  let grgr' = (protoVec4, GRGR, accept1);
  let grr' = (protoVec3, GRR, accept1);
  let grra' = (protoVec4, GRRA, accept4);
  let grrb' = (protoVec4, GRRB, accept3);
  let grrg' = (protoVec4, GRRG, accept1);
  let grrr' = (protoVec4, GRRR, accept1);
  let r' = (protoFloat, R, accept1);
  let ra' = (protoVec2, RA, accept4);
  let raa' = (protoVec3, RAA, accept4);
  let raaa' = (protoVec4, RAAA, accept4);
  let raab' = (protoVec4, RAAB, accept4);
  let raag' = (protoVec4, RAAG, accept4);
  let raar' = (protoVec4, RAAR, accept4);
  let rab' = (protoVec3, RAB, accept4);
  let raba' = (protoVec4, RABA, accept4);
  let rabb' = (protoVec4, RABB, accept4);
  let rabg' = (protoVec4, RABG, accept4);
  let rabr' = (protoVec4, RABR, accept4);
  let rag' = (protoVec3, RAG, accept4);
  let raga' = (protoVec4, RAGA, accept4);
  let ragb' = (protoVec4, RAGB, accept4);
  let ragg' = (protoVec4, RAGG, accept4);
  let ragr' = (protoVec4, RAGR, accept4);
  let rar' = (protoVec3, RAR, accept4);
  let rara' = (protoVec4, RARA, accept4);
  let rarb' = (protoVec4, RARB, accept4);
  let rarg' = (protoVec4, RARG, accept4);
  let rarr' = (protoVec4, RARR, accept4);
  let rb' = (protoVec2, RB, accept3);
  let rba' = (protoVec3, RBA, accept4);
  let rbaa' = (protoVec4, RBAA, accept4);
  let rbab' = (protoVec4, RBAB, accept4);
  let rbag' = (protoVec4, RBAG, accept4);
  let rbar' = (protoVec4, RBAR, accept4);
  let rbb' = (protoVec3, RBB, accept3);
  let rbba' = (protoVec4, RBBA, accept4);
  let rbbb' = (protoVec4, RBBB, accept3);
  let rbbg' = (protoVec4, RBBG, accept3);
  let rbbr' = (protoVec4, RBBR, accept3);
  let rbg' = (protoVec3, RBG, accept3);
  let rbga' = (protoVec4, RBGA, accept4);
  let rbgb' = (protoVec4, RBGB, accept3);
  let rbgg' = (protoVec4, RBGG, accept3);
  let rbgr' = (protoVec4, RBGR, accept3);
  let rbr' = (protoVec3, RBR, accept3);
  let rbra' = (protoVec4, RBRA, accept4);
  let rbrb' = (protoVec4, RBRB, accept3);
  let rbrg' = (protoVec4, RBRG, accept3);
  let rbrr' = (protoVec4, RBRR, accept3);
  let rg' = (protoVec2, RG, accept1);
  let rga' = (protoVec3, RGA, accept4);
  let rgaa' = (protoVec4, RGAA, accept4);
  let rgab' = (protoVec4, RGAB, accept4);
  let rgag' = (protoVec4, RGAG, accept4);
  let rgar' = (protoVec4, RGAR, accept4);
  let rgb' = (protoVec3, RGB, accept3);
  let rgba' = (protoVec4, RGBA, accept4);
  let rgbb' = (protoVec4, RGBB, accept3);
  let rgbg' = (protoVec4, RGBG, accept3);
  let rgbr' = (protoVec4, RGBR, accept3);
  let rgg' = (protoVec3, RGG, accept1);
  let rgga' = (protoVec4, RGGA, accept4);
  let rggb' = (protoVec4, RGGB, accept3);
  let rggg' = (protoVec4, RGGG, accept1);
  let rggr' = (protoVec4, RGGR, accept1);
  let rgr' = (protoVec3, RGR, accept1);
  let rgra' = (protoVec4, RGRA, accept4);
  let rgrb' = (protoVec4, RGRB, accept3);
  let rgrg' = (protoVec4, RGRG, accept1);
  let rgrr' = (protoVec4, RGRR, accept1);
  let rr' = (protoVec2, RR, accept1);
  let rra' = (protoVec3, RRA, accept4);
  let rraa' = (protoVec4, RRAA, accept4);
  let rrab' = (protoVec4, RRAB, accept4);
  let rrag' = (protoVec4, RRAG, accept4);
  let rrar' = (protoVec4, RRAR, accept4);
  let rrb' = (protoVec3, RRB, accept3);
  let rrba' = (protoVec4, RRBA, accept4);
  let rrbb' = (protoVec4, RRBB, accept3);
  let rrbg' = (protoVec4, RRBG, accept3);
  let rrbr' = (protoVec4, RRBR, accept3);
  let rrg' = (protoVec3, RRG, accept1);
  let rrga' = (protoVec4, RRGA, accept4);
  let rrgb' = (protoVec4, RRGB, accept3);
  let rrgg' = (protoVec4, RRGG, accept1);
  let rrgr' = (protoVec4, RRGR, accept1);
  let rrr' = (protoVec3, RRR, accept1);
  let rrra' = (protoVec4, RRRA, accept4);
  let rrrb' = (protoVec4, RRRB, accept3);
  let rrrg' = (protoVec4, RRRG, accept1);
  let rrrr' = (protoVec4, RRRR, accept1);
  let w' = (protoFloat, W, accept4);
  let ww' = (protoVec2, WW, accept4);
  let www' = (protoVec3, WWW, accept4);
  let wwww' = (protoVec4, WWWW, accept4);
  let wwwx' = (protoVec4, WWWX, accept4);
  let wwwy' = (protoVec4, WWWY, accept4);
  let wwwz' = (protoVec4, WWWZ, accept4);
  let wwx' = (protoVec3, WWX, accept4);
  let wwxw' = (protoVec4, WWXW, accept4);
  let wwxx' = (protoVec4, WWXX, accept4);
  let wwxy' = (protoVec4, WWXY, accept4);
  let wwxz' = (protoVec4, WWXZ, accept4);
  let wwy' = (protoVec3, WWY, accept4);
  let wwyw' = (protoVec4, WWYW, accept4);
  let wwyx' = (protoVec4, WWYX, accept4);
  let wwyy' = (protoVec4, WWYY, accept4);
  let wwyz' = (protoVec4, WWYZ, accept4);
  let wwz' = (protoVec3, WWZ, accept4);
  let wwzw' = (protoVec4, WWZW, accept4);
  let wwzx' = (protoVec4, WWZX, accept4);
  let wwzy' = (protoVec4, WWZY, accept4);
  let wwzz' = (protoVec4, WWZZ, accept4);
  let wx' = (protoVec2, WX, accept4);
  let wxw' = (protoVec3, WXW, accept4);
  let wxww' = (protoVec4, WXWW, accept4);
  let wxwx' = (protoVec4, WXWX, accept4);
  let wxwy' = (protoVec4, WXWY, accept4);
  let wxwz' = (protoVec4, WXWZ, accept4);
  let wxx' = (protoVec3, WXX, accept4);
  let wxxw' = (protoVec4, WXXW, accept4);
  let wxxx' = (protoVec4, WXXX, accept4);
  let wxxy' = (protoVec4, WXXY, accept4);
  let wxxz' = (protoVec4, WXXZ, accept4);
  let wxy' = (protoVec3, WXY, accept4);
  let wxyw' = (protoVec4, WXYW, accept4);
  let wxyx' = (protoVec4, WXYX, accept4);
  let wxyy' = (protoVec4, WXYY, accept4);
  let wxyz' = (protoVec4, WXYZ, accept4);
  let wxz' = (protoVec3, WXZ, accept4);
  let wxzw' = (protoVec4, WXZW, accept4);
  let wxzx' = (protoVec4, WXZX, accept4);
  let wxzy' = (protoVec4, WXZY, accept4);
  let wxzz' = (protoVec4, WXZZ, accept4);
  let wy' = (protoVec2, WY, accept4);
  let wyw' = (protoVec3, WYW, accept4);
  let wyww' = (protoVec4, WYWW, accept4);
  let wywx' = (protoVec4, WYWX, accept4);
  let wywy' = (protoVec4, WYWY, accept4);
  let wywz' = (protoVec4, WYWZ, accept4);
  let wyx' = (protoVec3, WYX, accept4);
  let wyxw' = (protoVec4, WYXW, accept4);
  let wyxx' = (protoVec4, WYXX, accept4);
  let wyxy' = (protoVec4, WYXY, accept4);
  let wyxz' = (protoVec4, WYXZ, accept4);
  let wyy' = (protoVec3, WYY, accept4);
  let wyyw' = (protoVec4, WYYW, accept4);
  let wyyx' = (protoVec4, WYYX, accept4);
  let wyyy' = (protoVec4, WYYY, accept4);
  let wyyz' = (protoVec4, WYYZ, accept4);
  let wyz' = (protoVec3, WYZ, accept4);
  let wyzw' = (protoVec4, WYZW, accept4);
  let wyzx' = (protoVec4, WYZX, accept4);
  let wyzy' = (protoVec4, WYZY, accept4);
  let wyzz' = (protoVec4, WYZZ, accept4);
  let wz' = (protoVec2, WZ, accept4);
  let wzw' = (protoVec3, WZW, accept4);
  let wzww' = (protoVec4, WZWW, accept4);
  let wzwx' = (protoVec4, WZWX, accept4);
  let wzwy' = (protoVec4, WZWY, accept4);
  let wzwz' = (protoVec4, WZWZ, accept4);
  let wzx' = (protoVec3, WZX, accept4);
  let wzxw' = (protoVec4, WZXW, accept4);
  let wzxx' = (protoVec4, WZXX, accept4);
  let wzxy' = (protoVec4, WZXY, accept4);
  let wzxz' = (protoVec4, WZXZ, accept4);
  let wzy' = (protoVec3, WZY, accept4);
  let wzyw' = (protoVec4, WZYW, accept4);
  let wzyx' = (protoVec4, WZYX, accept4);
  let wzyy' = (protoVec4, WZYY, accept4);
  let wzyz' = (protoVec4, WZYZ, accept4);
  let wzz' = (protoVec3, WZZ, accept4);
  let wzzw' = (protoVec4, WZZW, accept4);
  let wzzx' = (protoVec4, WZZX, accept4);
  let wzzy' = (protoVec4, WZZY, accept4);
  let wzzz' = (protoVec4, WZZZ, accept4);
  let x' = (protoFloat, X, accept1);
  let xw' = (protoVec2, XW, accept4);
  let xww' = (protoVec3, XWW, accept4);
  let xwww' = (protoVec4, XWWW, accept4);
  let xwwx' = (protoVec4, XWWX, accept4);
  let xwwy' = (protoVec4, XWWY, accept4);
  let xwwz' = (protoVec4, XWWZ, accept4);
  let xwx' = (protoVec3, XWX, accept4);
  let xwxw' = (protoVec4, XWXW, accept4);
  let xwxx' = (protoVec4, XWXX, accept4);
  let xwxy' = (protoVec4, XWXY, accept4);
  let xwxz' = (protoVec4, XWXZ, accept4);
  let xwy' = (protoVec3, XWY, accept4);
  let xwyw' = (protoVec4, XWYW, accept4);
  let xwyx' = (protoVec4, XWYX, accept4);
  let xwyy' = (protoVec4, XWYY, accept4);
  let xwyz' = (protoVec4, XWYZ, accept4);
  let xwz' = (protoVec3, XWZ, accept4);
  let xwzw' = (protoVec4, XWZW, accept4);
  let xwzx' = (protoVec4, XWZX, accept4);
  let xwzy' = (protoVec4, XWZY, accept4);
  let xwzz' = (protoVec4, XWZZ, accept4);
  let xx' = (protoVec2, XX, accept1);
  let xxw' = (protoVec3, XXW, accept4);
  let xxww' = (protoVec4, XXWW, accept4);
  let xxwx' = (protoVec4, XXWX, accept4);
  let xxwy' = (protoVec4, XXWY, accept4);
  let xxwz' = (protoVec4, XXWZ, accept4);
  let xxx' = (protoVec3, XXX, accept1);
  let xxxw' = (protoVec4, XXXW, accept4);
  let xxxx' = (protoVec4, XXXX, accept1);
  let xxxy' = (protoVec4, XXXY, accept2);
  let xxxz' = (protoVec4, XXXZ, accept3);
  let xxy' = (protoVec3, XXY, accept2);
  let xxyw' = (protoVec4, XXYW, accept4);
  let xxyx' = (protoVec4, XXYX, accept2);
  let xxyy' = (protoVec4, XXYY, accept2);
  let xxyz' = (protoVec4, XXYZ, accept3);
  let xxz' = (protoVec3, XXZ, accept3);
  let xxzw' = (protoVec4, XXZW, accept4);
  let xxzx' = (protoVec4, XXZX, accept3);
  let xxzy' = (protoVec4, XXZY, accept3);
  let xxzz' = (protoVec4, XXZZ, accept3);
  let xy' = (protoVec2, XY, accept2);
  let xyw' = (protoVec3, XYW, accept4);
  let xyww' = (protoVec4, XYWW, accept4);
  let xywx' = (protoVec4, XYWX, accept4);
  let xywy' = (protoVec4, XYWY, accept4);
  let xywz' = (protoVec4, XYWZ, accept4);
  let xyx' = (protoVec3, XYX, accept2);
  let xyxw' = (protoVec4, XYXW, accept4);
  let xyxx' = (protoVec4, XYXX, accept2);
  let xyxy' = (protoVec4, XYXY, accept2);
  let xyxz' = (protoVec4, XYXZ, accept3);
  let xyy' = (protoVec3, XYY, accept2);
  let xyyw' = (protoVec4, XYYW, accept4);
  let xyyx' = (protoVec4, XYYX, accept2);
  let xyyy' = (protoVec4, XYYY, accept2);
  let xyyz' = (protoVec4, XYYZ, accept3);
  let xyz' = (protoVec3, XYZ, accept3);
  let xyzw' = (protoVec4, XYZW, accept4);
  let xyzx' = (protoVec4, XYZX, accept3);
  let xyzy' = (protoVec4, XYZY, accept3);
  let xyzz' = (protoVec4, XYZZ, accept3);
  let xz' = (protoVec2, XZ, accept3);
  let xzw' = (protoVec3, XZW, accept4);
  let xzww' = (protoVec4, XZWW, accept4);
  let xzwx' = (protoVec4, XZWX, accept4);
  let xzwy' = (protoVec4, XZWY, accept4);
  let xzwz' = (protoVec4, XZWZ, accept4);
  let xzx' = (protoVec3, XZX, accept3);
  let xzxw' = (protoVec4, XZXW, accept4);
  let xzxx' = (protoVec4, XZXX, accept3);
  let xzxy' = (protoVec4, XZXY, accept3);
  let xzxz' = (protoVec4, XZXZ, accept3);
  let xzy' = (protoVec3, XZY, accept3);
  let xzyw' = (protoVec4, XZYW, accept4);
  let xzyx' = (protoVec4, XZYX, accept3);
  let xzyy' = (protoVec4, XZYY, accept3);
  let xzyz' = (protoVec4, XZYZ, accept3);
  let xzz' = (protoVec3, XZZ, accept3);
  let xzzw' = (protoVec4, XZZW, accept4);
  let xzzx' = (protoVec4, XZZX, accept3);
  let xzzy' = (protoVec4, XZZY, accept3);
  let xzzz' = (protoVec4, XZZZ, accept3);
  let y' = (protoFloat, Y, accept2);
  let yw' = (protoVec2, YW, accept4);
  let yww' = (protoVec3, YWW, accept4);
  let ywww' = (protoVec4, YWWW, accept4);
  let ywwx' = (protoVec4, YWWX, accept4);
  let ywwy' = (protoVec4, YWWY, accept4);
  let ywwz' = (protoVec4, YWWZ, accept4);
  let ywx' = (protoVec3, YWX, accept4);
  let ywxw' = (protoVec4, YWXW, accept4);
  let ywxx' = (protoVec4, YWXX, accept4);
  let ywxy' = (protoVec4, YWXY, accept4);
  let ywxz' = (protoVec4, YWXZ, accept4);
  let ywy' = (protoVec3, YWY, accept4);
  let ywyw' = (protoVec4, YWYW, accept4);
  let ywyx' = (protoVec4, YWYX, accept4);
  let ywyy' = (protoVec4, YWYY, accept4);
  let ywyz' = (protoVec4, YWYZ, accept4);
  let ywz' = (protoVec3, YWZ, accept4);
  let ywzw' = (protoVec4, YWZW, accept4);
  let ywzx' = (protoVec4, YWZX, accept4);
  let ywzy' = (protoVec4, YWZY, accept4);
  let ywzz' = (protoVec4, YWZZ, accept4);
  let yx' = (protoVec2, YX, accept2);
  let yxw' = (protoVec3, YXW, accept4);
  let yxww' = (protoVec4, YXWW, accept4);
  let yxwx' = (protoVec4, YXWX, accept4);
  let yxwy' = (protoVec4, YXWY, accept4);
  let yxwz' = (protoVec4, YXWZ, accept4);
  let yxx' = (protoVec3, YXX, accept2);
  let yxxw' = (protoVec4, YXXW, accept4);
  let yxxx' = (protoVec4, YXXX, accept2);
  let yxxy' = (protoVec4, YXXY, accept2);
  let yxxz' = (protoVec4, YXXZ, accept3);
  let yxy' = (protoVec3, YXY, accept2);
  let yxyw' = (protoVec4, YXYW, accept4);
  let yxyx' = (protoVec4, YXYX, accept2);
  let yxyy' = (protoVec4, YXYY, accept2);
  let yxyz' = (protoVec4, YXYZ, accept3);
  let yxz' = (protoVec3, YXZ, accept3);
  let yxzw' = (protoVec4, YXZW, accept4);
  let yxzx' = (protoVec4, YXZX, accept3);
  let yxzy' = (protoVec4, YXZY, accept3);
  let yxzz' = (protoVec4, YXZZ, accept3);
  let yy' = (protoVec2, YY, accept2);
  let yyw' = (protoVec3, YYW, accept4);
  let yyww' = (protoVec4, YYWW, accept4);
  let yywx' = (protoVec4, YYWX, accept4);
  let yywy' = (protoVec4, YYWY, accept4);
  let yywz' = (protoVec4, YYWZ, accept4);
  let yyx' = (protoVec3, YYX, accept2);
  let yyxw' = (protoVec4, YYXW, accept4);
  let yyxx' = (protoVec4, YYXX, accept2);
  let yyxy' = (protoVec4, YYXY, accept2);
  let yyxz' = (protoVec4, YYXZ, accept3);
  let yyy' = (protoVec3, YYY, accept2);
  let yyyw' = (protoVec4, YYYW, accept4);
  let yyyx' = (protoVec4, YYYX, accept2);
  let yyyy' = (protoVec4, YYYY, accept2);
  let yyyz' = (protoVec4, YYYZ, accept3);
  let yyz' = (protoVec3, YYZ, accept3);
  let yyzw' = (protoVec4, YYZW, accept4);
  let yyzx' = (protoVec4, YYZX, accept3);
  let yyzy' = (protoVec4, YYZY, accept3);
  let yyzz' = (protoVec4, YYZZ, accept3);
  let yz' = (protoVec2, YZ, accept3);
  let yzw' = (protoVec3, YZW, accept4);
  let yzww' = (protoVec4, YZWW, accept4);
  let yzwx' = (protoVec4, YZWX, accept4);
  let yzwy' = (protoVec4, YZWY, accept4);
  let yzwz' = (protoVec4, YZWZ, accept4);
  let yzx' = (protoVec3, YZX, accept3);
  let yzxw' = (protoVec4, YZXW, accept4);
  let yzxx' = (protoVec4, YZXX, accept3);
  let yzxy' = (protoVec4, YZXY, accept3);
  let yzxz' = (protoVec4, YZXZ, accept3);
  let yzy' = (protoVec3, YZY, accept3);
  let yzyw' = (protoVec4, YZYW, accept4);
  let yzyx' = (protoVec4, YZYX, accept3);
  let yzyy' = (protoVec4, YZYY, accept3);
  let yzyz' = (protoVec4, YZYZ, accept3);
  let yzz' = (protoVec3, YZZ, accept3);
  let yzzw' = (protoVec4, YZZW, accept4);
  let yzzx' = (protoVec4, YZZX, accept3);
  let yzzy' = (protoVec4, YZZY, accept3);
  let yzzz' = (protoVec4, YZZZ, accept3);
  let z' = (protoFloat, Z, accept3);
  let zw' = (protoVec2, ZW, accept4);
  let zww' = (protoVec3, ZWW, accept4);
  let zwww' = (protoVec4, ZWWW, accept4);
  let zwwx' = (protoVec4, ZWWX, accept4);
  let zwwy' = (protoVec4, ZWWY, accept4);
  let zwwz' = (protoVec4, ZWWZ, accept4);
  let zwx' = (protoVec3, ZWX, accept4);
  let zwxw' = (protoVec4, ZWXW, accept4);
  let zwxx' = (protoVec4, ZWXX, accept4);
  let zwxy' = (protoVec4, ZWXY, accept4);
  let zwxz' = (protoVec4, ZWXZ, accept4);
  let zwy' = (protoVec3, ZWY, accept4);
  let zwyw' = (protoVec4, ZWYW, accept4);
  let zwyx' = (protoVec4, ZWYX, accept4);
  let zwyy' = (protoVec4, ZWYY, accept4);
  let zwyz' = (protoVec4, ZWYZ, accept4);
  let zwz' = (protoVec3, ZWZ, accept4);
  let zwzw' = (protoVec4, ZWZW, accept4);
  let zwzx' = (protoVec4, ZWZX, accept4);
  let zwzy' = (protoVec4, ZWZY, accept4);
  let zwzz' = (protoVec4, ZWZZ, accept4);
  let zx' = (protoVec2, ZX, accept3);
  let zxw' = (protoVec3, ZXW, accept4);
  let zxww' = (protoVec4, ZXWW, accept4);
  let zxwx' = (protoVec4, ZXWX, accept4);
  let zxwy' = (protoVec4, ZXWY, accept4);
  let zxwz' = (protoVec4, ZXWZ, accept4);
  let zxx' = (protoVec3, ZXX, accept3);
  let zxxw' = (protoVec4, ZXXW, accept4);
  let zxxx' = (protoVec4, ZXXX, accept3);
  let zxxy' = (protoVec4, ZXXY, accept3);
  let zxxz' = (protoVec4, ZXXZ, accept3);
  let zxy' = (protoVec3, ZXY, accept3);
  let zxyw' = (protoVec4, ZXYW, accept4);
  let zxyx' = (protoVec4, ZXYX, accept3);
  let zxyy' = (protoVec4, ZXYY, accept3);
  let zxyz' = (protoVec4, ZXYZ, accept3);
  let zxz' = (protoVec3, ZXZ, accept3);
  let zxzw' = (protoVec4, ZXZW, accept4);
  let zxzx' = (protoVec4, ZXZX, accept3);
  let zxzy' = (protoVec4, ZXZY, accept3);
  let zxzz' = (protoVec4, ZXZZ, accept3);
  let zy' = (protoVec2, ZY, accept3);
  let zyw' = (protoVec3, ZYW, accept4);
  let zyww' = (protoVec4, ZYWW, accept4);
  let zywx' = (protoVec4, ZYWX, accept4);
  let zywy' = (protoVec4, ZYWY, accept4);
  let zywz' = (protoVec4, ZYWZ, accept4);
  let zyx' = (protoVec3, ZYX, accept3);
  let zyxw' = (protoVec4, ZYXW, accept4);
  let zyxx' = (protoVec4, ZYXX, accept3);
  let zyxy' = (protoVec4, ZYXY, accept3);
  let zyxz' = (protoVec4, ZYXZ, accept3);
  let zyy' = (protoVec3, ZYY, accept3);
  let zyyw' = (protoVec4, ZYYW, accept4);
  let zyyx' = (protoVec4, ZYYX, accept3);
  let zyyy' = (protoVec4, ZYYY, accept3);
  let zyyz' = (protoVec4, ZYYZ, accept3);
  let zyz' = (protoVec3, ZYZ, accept3);
  let zyzw' = (protoVec4, ZYZW, accept4);
  let zyzx' = (protoVec4, ZYZX, accept3);
  let zyzy' = (protoVec4, ZYZY, accept3);
  let zyzz' = (protoVec4, ZYZZ, accept3);
  let zz' = (protoVec2, ZZ, accept3);
  let zzw' = (protoVec3, ZZW, accept4);
  let zzww' = (protoVec4, ZZWW, accept4);
  let zzwx' = (protoVec4, ZZWX, accept4);
  let zzwy' = (protoVec4, ZZWY, accept4);
  let zzwz' = (protoVec4, ZZWZ, accept4);
  let zzx' = (protoVec3, ZZX, accept3);
  let zzxw' = (protoVec4, ZZXW, accept4);
  let zzxx' = (protoVec4, ZZXX, accept3);
  let zzxy' = (protoVec4, ZZXY, accept3);
  let zzxz' = (protoVec4, ZZXZ, accept3);
  let zzy' = (protoVec3, ZZY, accept3);
  let zzyw' = (protoVec4, ZZYW, accept4);
  let zzyx' = (protoVec4, ZZYX, accept3);
  let zzyy' = (protoVec4, ZZYY, accept3);
  let zzyz' = (protoVec4, ZZYZ, accept3);
  let zzz' = (protoVec3, ZZZ, accept3);
  let zzzw' = (protoVec4, ZZZW, accept4);
  let zzzx' = (protoVec4, ZZZX, accept3);
  let zzzy' = (protoVec4, ZZZY, accept3);
  let zzzz' = (protoVec4, ZZZZ, accept3);
